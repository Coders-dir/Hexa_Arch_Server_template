name: Postman smoke

on:
  pull_request:
  push:
    branches: [ main ]

jobs:
  postman-smoke:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Skip if project template missing
        run: |
          if [ ! -d service-template ]; then
            echo "service-template not present; skipping postman smoke tests (non-fatal)."
            exit 0
          fi
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - name: Install runtime deps (Poetry)
        run: |
          python -m pip install --upgrade pip
          python -m pip install poetry
          cd service-template
          poetry config virtualenvs.create false
          poetry install --no-interaction || true
      - name: Start test services (bring up docker-compose.test.yml)
        run: |
          set -euo pipefail
          cd service-template
          COMPOSE_FILE=docker-compose.test.yml
          if ! command -v docker >/dev/null 2>&1; then
            echo "docker not found in runner; skipping docker-dependent smoke tests (non-fatal)."
            exit 0
          fi
          docker compose -f "$COMPOSE_FILE" up -d

      - name: Wait for services
        run: |
          # wait for Postgres
          for i in {1..30}; do docker exec service-template-postgres-1 pg_isready -U test && break || sleep 1; done
          # wait for redis
          for i in {1..30}; do docker exec service-template-redis-1 redis-cli ping && break || sleep 1; done
          # wait for mongo
          for i in {1..30}; do docker exec service-template-mongo-1 mongosh --eval 'db.runCommand({ping:1})' && break || sleep 1; done

      - name: Start app
        run: |
          if ! command -v docker >/dev/null 2>&1; then
            echo "Skipping app start because docker is unavailable in runner; smoke test skipped.";
            exit 0
          fi
          cd service-template
          export PYTHONPATH=$PWD
          nohup poetry run uvicorn src.app.main:app --host 0.0.0.0 --port 8000 &
          for i in {1..60}; do
            if curl -sSf http://127.0.0.1:8000/health >/dev/null 2>&1; then
              echo "app healthy"
              break
            fi
            sleep 2
          done
      - name: Ensure app up
        run: |
          curl -sSf http://127.0.0.1:8000/health
      - name: Run smoke script
        run: |
          cd service-template
          python scripts/run_postman_smoke.py

      - name: Tear down test services
        if: always()
        run: |
          set -euo pipefail
          cd service-template
          COMPOSE_FILE=docker-compose.test.yml
          if command -v docker >/dev/null 2>&1; then
            docker compose -f "$COMPOSE_FILE" down || true
          fi
