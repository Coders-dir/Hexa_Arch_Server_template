name: Monolith CI

on:
  pull_request:
  push:
    branches: [ main ]

jobs:
  test-monolith:
    runs-on: ubuntu-latest
    services: {}
    steps:
      - uses: actions/checkout@v4
      - name: Start test services (docker compose action)
        uses: docker/compose-action@v3
        with:
          files: monolith-template/docker-compose.test.yml
          args: up -d

      - name: Wait for services
        run: |
          # wait for Postgres
          for i in {1..30}; do docker exec monolith-template-postgres-1 pg_isready -U test && break || sleep 1; done
          # wait for redis
          for i in {1..30}; do docker exec monolith-template-redis-1 redis-cli ping && break || sleep 1; done
          # wait for mongo
          for i in {1..30}; do docker exec monolith-template-mongo-1 mongosh --eval 'db.runCommand({ping:1})' && break || sleep 1; done
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - name: Install Poetry
        run: |
          python -m pip install --upgrade pip
          python -m pip install poetry
      - name: Check poetry lock
        run: |
          cd monolith-template
          python scripts/check_poetry_lock.py
      - name: Install project deps
        run: |
          cd monolith-template
          poetry install --no-interaction
      - name: Run tests
        run: |
          cd monolith-template
          poetry run pytest -q

      - name: Tear down test services
        if: always()
        uses: docker/compose-action@v3
        with:
          files: monolith-template/docker-compose.test.yml
          args: down
